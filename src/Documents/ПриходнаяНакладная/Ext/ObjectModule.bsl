
Процедура ОбработкаПроведения(Отказ, Режим)
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	// регистр ОстаткиНаСкладах Приход
	Движения.ОстаткиНаСкладах.Записывать = Истина;
	Для Каждого ТекСтрокаТовары Из Товары Цикл
		Движение = Движения.ОстаткиНаСкладах.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
		Движение.Партия = Ссылка; //Партионный учет
		Движение.Склад = Склад;
		Движение.Организация = Организация;
		Движение.Количество = ТекСтрокаТовары.Количество; 
		Движение.Сумма = ТекСтрокаТовары.Сумма; //Партионный учет
	КонецЦикла;
	
	ОбработкаПроведенияПоРегиструБухгалтерии(Отказ, Режим);
	
	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
КонецПроцедуры

Процедура ОбработкаПроведенияПоРегиструБухгалтерии(Отказ, Режим)
	
	Движения.Проводки.Записывать = Истина;
	Для Каждого ТекСтрокаТовары Из Товары Цикл
		Движение = Движения.Проводки.Добавить();
		Движение.СчетДт = ПланыСчетов.Управленческий.Товары;
		Движение.СчетКт = ПланыСчетов.Управленческий.Поставщики;
		Движение.Период = Дата;
		Движение.Сумма = ТекСтрокаТовары.Сумма;
		Движение.КоличествоДт = ТекСтрокаТовары.Количество;
		Движение.Организация = Организация;
		Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.Номенклатура] = ТекСтрокаТовары.Номенклатура;
		Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.Склад] = Склад;
		Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.Партия] = Ссылка;
		Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Контрагент] = Контрагент;
		
		БухгалтерияСервер.УстановитьПодразделенияПроводки(Движение, Подразделение, Подразделение)
	КонецЦикла;

КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ПараметрыОпций = Новый Структура;
	
	ПараметрыОпций.Вставить("Организация", Организация);
	
	УчетПоПодразделениям = ПолучитьФункциональнуюОпцию("ПоПодразделениям", ПараметрыОпций);
	
	Если Не УчетПоПодразделениям Тогда
		
		ИндексУдаляемогоЭлемента = ПроверяемыеРеквизиты.Найти("Подразделение");	
		ПроверяемыеРеквизиты.Удалить(ИндексУдаляемогоЭлемента);	
	
	КонецЕсли;
	
КонецПроцедуры
