
Процедура ОбработкаПроведения(Отказ, Режим)
	
	ОстатокКредитногоЛимита = КредитныеЛимитыСервер.ПолучитьОстатокЛимита(Дата, Контрагент);
	Если ОстатокКредитногоЛимита < Товары.Итог("Сумма") Тогда 
		Сообщить("Превышена сумма кредитного лимита");
		Отказ = Истина;	
	КонецЕсли;
	
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Движения.ОстаткиНаСкладах.Записывать = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РасходнаяНакладнаяТовары.Товар КАК Товар,
		|	РасходнаяНакладнаяТовары.Количество КАК Количество
		|ПОМЕСТИТЬ НужноСписать
		|ИЗ
		|	Документ.РасходнаяНакладная.Товары КАК РасходнаяНакладнаяТовары
		|ГДЕ
		|	РасходнаяНакладнаяТовары.Ссылка = &РасходныйДокумент
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОстаткиНаСкладахОстатки.Номенклатура КАК Номенклатура,
		|	ОстаткиНаСкладахОстатки.Партия КАК Партия,
		|	ОстаткиНаСкладахОстатки.КоличествоОстаток КАК КоличествоОстаток,
		|	ОстаткиНаСкладахОстатки.СуммаОстаток КАК СуммаОстаток
		|ПОМЕСТИТЬ ОстаткиПоПартиям
		|ИЗ
		|	РегистрНакопления.ОстаткиНаСкладах.Остатки(
		|			&Период,
		|			Склад = &Склад
		|				И Организация = &Организация
		|				И Номенклатура В
		|					(ВЫБРАТЬ
		|						НужноСписать.Товар
		|					ИЗ
		|						НужноСписать КАК НужноСписать)) КАК ОстаткиНаСкладахОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НужноСписать.Товар КАК Товар,
		|	НужноСписать.Количество КАК Количество,
		|	ОстаткиПоПартиям.Партия КАК Партия,
		|	ОстаткиПоПартиям.КоличествоОстаток КАК КоличествоОстаток,
		|	ОстаткиПоПартиям.СуммаОстаток КАК СуммаОстаток
		|ИЗ
		|	НужноСписать КАК НужноСписать
		|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиПоПартиям КАК ОстаткиПоПартиям
		|		ПО НужноСписать.Товар = ОстаткиПоПартиям.Номенклатура
		|
		|УПОРЯДОЧИТЬ ПО
		|	ОстаткиПоПартиям.Партия.Дата ВОЗР
		|ИТОГИ
		|	МАКСИМУМ(Количество),
		|	СУММА(КоличествоОстаток)
		|ПО
		|	Товар";
	
	ЛИФО = Истина;
	
	Если ЛИФО Тогда
	
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВОЗР", "УБЫВ");
	
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("РасходныйДокумент", Ссылка);
	Запрос.УстановитьПараметр("Склад", Склад);
	
	Запрос.УстановитьПараметр("Период", МоментВремени());	
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаТовар = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаТовар.Следующий() Цикл
		// Вставить обработку выборки ВыборкаТовар
		
		Если ВыборкаТовар.Количество > ВыборкаТовар.КоличествоОстаток Тогда
		
			Сообщить("На складе не достаточно товара " + ВыборкаТовар.Товар);
			Отказ = Истина;
		
		КонецЕсли;
		
		ВыборкаДетальныеЗаписи = ВыборкаТовар.Выбрать();
	    ОсталосьСписать = ВыборкаТовар.Количество;
		СписатьСЭтойПартии = 0;
		СтоимостьСписываемого = 0;
		Пока ВыборкаДетальныеЗаписи.Следующий() 
			И ОсталосьСписать > 0 Цикл
			
			Если ВыборкаДетальныеЗаписи.КоличествоОстаток >= ОсталосьСписать Тогда
				
				СписатьСЭтойПартии = ОсталосьСписать; 
				СтоимостьСписываемого = ВыборкаДетальныеЗаписи.СуммаОстаток/ВыборкаДетальныеЗаписи.КоличествоОстаток 
										* СписатьСЭтойПартии;
				ОсталосьСписать = 0;
				
			Иначе
				
				СписатьСЭтойПартии = ВыборкаДетальныеЗаписи.КоличествоОстаток; 
				СтоимостьСписываемого = ВыборкаДетальныеЗаписи.СуммаОстаток;
				ОсталосьСписать = ОсталосьСписать - СписатьСЭтойПартии;
			    	
			КонецЕсли;
			
			Движение = Движения.ОстаткиНаСкладах.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период = Дата;
			Движение.Номенклатура = ВыборкаДетальныеЗаписи.Товар;
			Движение.Организация = Организация;
			Движение.Склад = Склад;
			Движение.Партия = ВыборкаДетальныеЗаписи.Партия;
			Движение.Количество = СписатьСЭтойПартии;
			Движение.Сумма = СтоимостьСписываемого;
			
		КонецЦикла;
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
	////{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	//// Данный фрагмент построен конструктором.
	//// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	//
	//Запрос = Новый Запрос;
	//
	//Запрос.Текст = "ВЫБРАТЬ
	//               |	ОстаткиНаСкладахОстатки.Номенклатура КАК Номенклатура,
	//               |	ЕСТЬNULL(ОстаткиНаСкладахОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
	//               |	РасходнаяНакладнаяТовары.Товар КАК Товар,
	//               |	РасходнаяНакладнаяТовары.Количество КАК Количество
	//               |ИЗ
	//               |	Документ.РасходнаяНакладная.Товары КАК РасходнаяНакладнаяТовары
	//               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиНаСкладах.Остатки(
	//               |				&ДатаДокумента,
	//               |				Склад = &Склад
	//               |					И Организация = &Организация) КАК ОстаткиНаСкладахОстатки
	//               |		ПО РасходнаяНакладнаяТовары.Товар = ОстаткиНаСкладахОстатки.Номенклатура
	//               |ГДЕ
	//               |	РасходнаяНакладнаяТовары.Ссылка = &СсылкаНаДокумент";
	//
	//Запрос.УстановитьПараметр("ДатаДокумента", Дата); 
	//Запрос.УстановитьПараметр("Склад", Склад);
	//Запрос.УстановитьПараметр("Организация", Организация);
	//Запрос.УстановитьПараметр("СсылкаНаДокумент", Ссылка);
	//
	//РезультатЗапроса = Запрос.Выполнить();
	//
	////ТаблицаЗначенийРезультата = РезультатЗапроса.Выгрузить();
	//Выборка = РезультатЗапроса.Выбрать();
	//
	//Пока Выборка.Следующий() Цикл
	//	
	//	Если Выборка.Количество  > Выборка.КоличествоОстаток Тогда
	//		
	//	    Отказ = Истина;
	//		
	//		Сообщить("Не достаточно товара " + Выборка.Товар + " Остаток: " + Выборка.КоличествоОстаток);

	//	КонецЕсли;
	//	
	//КонецЦикла;
	//
	//
	//// регистр ОстаткиНаСкладах Расход
	//Движения.ОстаткиНаСкладах.Записывать = Истина;
	//Для Каждого ТекСтрокаТовары Из Товары Цикл
	//	Движение = Движения.ОстаткиНаСкладах.Добавить();
	//	Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
	//	Движение.Период = Дата;
	//	Движение.Номенклатура = ТекСтрокаТовары.Товар;
	//	Движение.Организация = Организация;
	//	Движение.Количество = ТекСтрокаТовары.Количество;
	//КонецЦикла; 
	
	Движения.ЗадолженностьКонтрагентов.Записывать = Истина;
	Движение = Движения.ЗадолженностьКонтрагентов.Добавить();
	Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
	Движение.Период = Дата;
	Движение.Клиент = Контрагент;
	Движение.Сумма = Товары.Итог("Сумма");

	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ 
	
	Если Не Отказ Тогда
		ДвиженияПродажи(); 
		ОбработкаПроведенияПоРегиструБухгалтерии(Отказ, Режим);
	КонецЕсли;
КонецПроцедуры

Процедура ЗабронироватьТовар() Экспорт
	
	Движения.ЗабронированныеТовары.Записывать = Истина;
	Для Каждого ТекСтрокаТовары Из Товары Цикл
		Движение = Движения.ЗабронированныеТовары.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Товар = ТекСтрокаТовары.Товар;
		Движение.Количество = ТекСтрокаТовары.Количество;
	КонецЦикла;
	
	Движения.ЗабронированныеТовары.Записать();
	
КонецПроцедуры

Процедура ДвиженияПродажи()

	
	Движения.Продажи.Записывать = Истина;
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РасходнаяНакладнаяТовары.Товар КАК Товар,
		|	СУММА(РасходнаяНакладнаяТовары.Количество) КАК Количество,
		|	СУММА(РасходнаяНакладнаяТовары.Сумма) КАК Сумма,
		|	РасходнаяНакладнаяТовары.Ссылка.Сотрудник КАК Сотрудник
		|ИЗ
		|	Документ.РасходнаяНакладная.Товары КАК РасходнаяНакладнаяТовары
		|ГДЕ
		|	РасходнаяНакладнаяТовары.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	РасходнаяНакладнаяТовары.Товар,
		|	РасходнаяНакладнаяТовары.Ссылка.Сотрудник";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Движение = Движения.Продажи.Добавить();
		Движение.Количество = ВыборкаДетальныеЗаписи.Количество;
		Движение.Сумма = ВыборкаДетальныеЗаписи.Сумма; 
		Движение.Номенклатура = ВыборкаДетальныеЗаписи.Товар;
		Движение.Сотрудник = ВыборкаДетальныеЗаписи.Сотрудник;
		Движение.Период = Дата;
	КонецЦикла;
КонецПроцедуры
	
Процедура ОбработкаПроведенияПоРегиструБухгалтерии(Отказ, Режим)
	
	Движения.Проводки.Записывать = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РасходнаяНакладнаяТовары.Товар КАК Номенклатура,
	|	РасходнаяНакладнаяТовары.Количество КАК Количество,
	|	РасходнаяНакладная.Склад КАК Склад
	|ПОМЕСТИТЬ ТребуетсяСписать
	|ИЗ
	|	Документ.РасходнаяНакладная.Товары КАК РасходнаяНакладнаяТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасходнаяНакладная КАК РасходнаяНакладная
	|		ПО РасходнаяНакладнаяТовары.Ссылка = РасходнаяНакладная.Ссылка
	|ГДЕ
	|	РасходнаяНакладная.Ссылка = &СсылкаНаДокумент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПроводкиОстатки.Субконто1 КАК Номенклатура,
	|	ПроводкиОстатки.Субконто3 КАК Партия,
	|	ПроводкиОстатки.СуммаОстаток КАК СуммаОстаток,
	|	ПроводкиОстатки.КоличествоОстаток КАК КоличествоОстаток
	|ПОМЕСТИТЬ ОстаткиПоПартиям
	|ИЗ
	|	РегистрБухгалтерии.Проводки.Остатки(
	|			&ДатаДокумента,
	|			Счет = ЗНАЧЕНИЕ(ПланСчетов.Управленческий.Товары),
	|			,
	|			(Субконто1, Субконто2) В
	|				(ВЫБРАТЬ
	|					ТребуетсяСписать.Номенклатура,
	|					ТребуетсяСписать.Склад
	|				ИЗ
	|					ТребуетсяСписать КАК ТребуетсяСписать)) КАК ПроводкиОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТребуетсяСписать.Номенклатура КАК Номенклатура,
	|	ТребуетсяСписать.Количество КАК Количество,
	|	ОстаткиПоПартиям.Партия КАК Партия,
	|	ОстаткиПоПартиям.СуммаОстаток КАК СуммаОстаток,
	|	ЕстьNull(ОстаткиПоПартиям.КоличествоОстаток, 0) КАК КоличествоОстаток
	|ИЗ
	|	ТребуетсяСписать КАК ТребуетсяСписать
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиПоПартиям КАК ОстаткиПоПартиям
	|		ПО ТребуетсяСписать.Номенклатура = ОстаткиПоПартиям.Номенклатура
	|
	|УПОРЯДОЧИТЬ ПО
	|	ОстаткиПоПартиям.Партия.Дата
	|ИТОГИ
	|	МАКСИМУМ(Количество),
	|	СУММА(КоличествоОстаток)
	|ПО
	|	Номенклатура";
	
	Запрос.УстановитьПараметр("ДатаДокумента", МоментВремени());
	Запрос.УстановитьПараметр("СсылкаНаДокумент", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаНоменклатура = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаНоменклатура.Следующий() Цикл
		
		Если ВыборкаНоменклатура.Количество > ВыборкаНоменклатура.КоличествоОстаток Тогда
			
			Сообщить("Нехватка товара " + ВыборкаНоменклатура.Номенклатура);
			Отказ = Истина;
			
		Иначе
			
			ВыборкаДетальныеЗаписи = ВыборкаНоменклатура.Выбрать();
			
			ТребуетсяСписать = ВыборкаНоменклатура.Количество;
			КСписанию = 0;
			
			Пока ВыборкаДетальныеЗаписи.Следующий() И ТребуетсяСписать > 0 Цикл
				
				Если ВыборкаДетальныеЗаписи.КоличествоОстаток >= ТребуетсяСписать Тогда
					
					КСписанию = ТребуетсяСписать;
					
					ТребуетсяСписать = 0;
					
				Иначе
					
					КСписанию = ВыборкаДетальныеЗаписи.КоличествоОстаток;
					
					ТребуетсяСписать = ТребуетсяСписать - КСписанию;
					
				КонецЕсли;
				
				Движение = Движения.Проводки.Добавить();
				Движение.СчетДт = ПланыСчетов.Управленческий.Капитал;
				Движение.СчетКт = ПланыСчетов.Управленческий.Товары;
				Движение.Период = Дата;
				Движение.Организация = Организация;
				Движение.Сумма = КСписанию *  ВыборкаДетальныеЗаписи.СуммаОстаток 
				/ ВыборкаДетальныеЗаписи.КоличествоОстаток;
				Движение.КоличествоКт = КСписанию;
				Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Номенклатура] =  ВыборкаНоменклатура.Номенклатура;
				Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Склад] = Склад;
				Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Партия] =  ВыборкаДетальныеЗаписи.Партия;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	Движение = Движения.Проводки.Добавить();
	Движение.СчетДт = ПланыСчетов.Управленческий.Покупатели;
	Движение.СчетКт = ПланыСчетов.Управленческий.Капитал;
	Движение.Период = Дата; 
	Движение.Организация = Организация;
	Движение.Сумма = Товары.Итог("Сумма");
	
	Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.Контрагент] = Контрагент;
	
КонецПроцедуры









